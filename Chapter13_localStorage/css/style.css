body{
  background-color: #2f2f2f;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
}

#container{
  background-color: white;
  width: 500px;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 15px rgba(0,0,0,0.1)
}

/*
고급 선택자: 태그[속성="값"){속성:값;}
선택된 태그들 중에서 지정된 속성이 속성값으로 설정된 요소만 선택하는 선택자
*/

input[type="text"]{
  width: calc(100% - 22px);
  padding: 10px;
  margin-bottom: 10px;
  border: 2px solid #ddd;
  border-radius: 4px;
}

button{
  width: 100%;
  padding: 10px;
  background-color: lime;
  border: none;
  border-radius: 4px;
  color: white;
  font-size: 16px;
  cursor: pointer;
}

button:hover{
  background-color: #32cd32; /* 대표적인 버튼의 두번째 색 */
}

/* HTML에 작성한 부분. li태그를 추가하는 JS를 만들어야 한다.*/
ul{
  list-style: none;
  padding: 0;
}

/* button 중 삭제 버튼의 디자인 변경하기 */
/*
scripts.js를 다 작성해서 renderTodos()를 호출했을 때, ul의 자식 태그인 li가 default css를 사용한다는 점을 알 수 있다.

button 태그의 경우에도 상위에 있는 button이었던 '추가' 버튼과 동일한 CSS를 가진다.

li의 button 중 deleteBtn에 해당하는 요소를 선택하여 CSS를 꾸미기 시작한다.

*/

li {
  background-color: white;
  margin-top: 0px;
  padding: 10px;
  border-radius: 4px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 100%;
}

button.deleteBtn{
  background-color: gray;
  margin: 10px;
  padding: 5px;
  width: 20%;
  /* border: none;
  border-radius: 4px;
  color: white;
  font-size: 16px;
  cursor: pointer;
  주석처리 한 부분은, 상위 button 태그와 동일한 부분이므로,
  일종의 CSS 상속이 이루어져서 현재 주석 처리가 되어있음에도,
  알아서 적용된다. */
}